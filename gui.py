#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.24
#  in conjunction with Tcl version 8.6
#    Jul 23, 2019 02:46:33 PM CEST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support
from gui_vid import App

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    gui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):

        app = App()

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("760x511+541+155")
        top.title("New Toplevel")
        top.configure(background="#d8d8d8")

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.place(relx=0.013, rely=0.078, relheight=0.667
                , relwidth=0.488)
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(width=371)

        self.Button4 = tk.Button(self.Canvas1)
        self.Button4.place(relx=0.647, rely=0.029, height=33, width=117)
        self.Button4.configure(text='''Load Video''', command=App.callback_openFirstFile(app))

        self.Canvas2 = tk.Canvas(top)
        self.Canvas2.place(relx=0.513, rely=0.078, relheight=0.667
                , relwidth=0.475)
        self.Canvas2.configure(borderwidth="2")
        self.Canvas2.configure(relief="ridge")
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(width=361)

        self.Button5 = tk.Button(self.Canvas2)
        self.Button5.place(relx=0.637, rely=0.029, height=33, width=117)
        self.Button5.configure(text='''Load Video''', command=App.callback_openFirstFile(app))

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.171, rely=0.763, height=33, width=61)
        self.Button1.configure(text='''Play''')

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.711, rely=0.763, height=33, width=61)
        self.Button2.configure(text='''Play''')
        self.Button2.configure(width=61)

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.013, rely=0.92, height=33, width=741)
        self.Button3.configure(text='''Play Both''')
        self.Button3.configure(width=741)

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.507, rely=0.039, relheight=0.841)
        self.TSeparator1.configure(orient="vertical")

if __name__ == '__main__':
    vp_start_gui()





